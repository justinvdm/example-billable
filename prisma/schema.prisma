// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  output          = "../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Invoice {
  id              String    @id @default(uuid())
  title           String    @default("invoice")
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  number          String
  date            DateTime  @default(now())
  status          String    @default("draft")
  supplierLogo    String?
  supplierName    String?
  supplierContact String?
  customer        String?
  notesA          String?
  notesB          String?
  items           String    @default("[]")
  taxes           String    @default("[]")
  labels          String    @default("{\"invoiceNumber\":\"Invoice #\",\"invoiceDate\":\"Date\",\"itemDescription\":\"Description\",\"itemQuantity\":\"Quantity\",\"itemPrice\":\"Price\",\"subtotal\":\"Subtotal\",\"total\":\"Total\"}")
  currency        String    @default("$")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime? @updatedAt

  @@unique([userId, number])
}

model User {
  id                 String      @id @default(uuid())
  email              String      @unique
  authToken          String?
  authTokenExpiresAt DateTime?
  createdAt          DateTime    @default(now())
  updatedAt          DateTime?   @updatedAt
  Invoice            Invoice[]
  Credential         Credential?
}

model Credential {
  id           String   @id @default(uuid()) // Internal DB ID
  userId       String   @unique // Each user has one discoverable credential
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  credentialId String   @unique // WebAuthn credential identifier
  publicKey    Bytes
  counter      Int      @default(0)

  @@index([credentialId])
  @@index([userId])
}
